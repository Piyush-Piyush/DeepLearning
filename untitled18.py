# -*- coding: utf-8 -*-
"""Untitled18.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UVWToyE05UTYKn4v3M298CZokj7bfqLC
"""

from tensorflow.keras.datasets import imdb

(x_train, y_train), (x_test, y_test) = imdb.load_data(num_words = 10000)
print(x_train.shape)
print(x_test.shape )

from tensorflow.keras.preprocessing.sequence import pad_sequences

x_train = pad_sequences(x_train, maxlen = 200);
x_test = pad_sequences(x_test, maxlen = 200)

import numpy as np

x_train = np.asarray(x_train).astype("float32")

x_test = np.asarray(x_test).astype("float32")

import keras

model = keras.Sequential([
    keras.Input(shape = (200,)),
    keras.layers.Dense(16, activation = 'relu'),
    keras.layers.Dense(16, activation = 'relu'),
    keras.layers.Dense(1, activation = 'sigmoid'),
])

model.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])

history = model.fit(x_train, y_train, epochs = 10, batch_size = 512, validation_split = 0.2)

dict_data = history.history

dict_data.keys()

import matplotlib.pyplot as plt

accuracy = dict_data['accuracy']
val_accuracy = dict_data['val_accuracy']
loss = dict_data['loss']
val_loss = dict_data['val_loss']


plt.plot(accuracy, label = 'accuracy')
plt.plot(val_accuracy, label = 'val_accuracy')
plt.legend()
plt.show()

plt.plot(loss, label = 'loss')
plt.plot(val_loss, label = 'val_loss')
plt.legend()
plt.show()

